{"version":3,"sources":["lib/monthFunctions.js","components/NavBar.js","components/MonthTitle.js","reducers/events/eventsActions.js","reducers/events/eventsConstants.js","components/MonthCell.js","constants/daysOfWeek.js","lib/monthInfo.js","constants/months.js","components/MonthGrid.js","components/EventModal.js","components/Month.js","App.js","serviceWorker.js","reducers/events/eventsReducer.js","reducers/rootReducer.js","reducers/store.js","index.js"],"names":["monthNumToName","i","monthNameToNum","month","getPrevMonth","m","c","isNaN","getNextMonth","getNextMonthYear","y","parseInt","NavBar","react_default","a","createElement","react_router_dom","to","Date","getMonth","getFullYear","MonthTitle","_ref","year","setDisplayedEvent","displayedEvent","type","mapDispatchToProps","Event","_ref2","title","onClick","className","connect","state","events","_ref3","date","empty","eventsOnDate","day","Object","values","filter","_ref$date","d","getEventsOnDate","console","log","map","event","MonthCell_Event","daysByIndex","NUM_DAYS","_NUM_DAYS","defineProperty","monthInfo","numDays","isLeapYear","getNumDays","firstDay","concat","lastDay","startsOn","getDay","endsOn","renderWeek","week","datesInWeek","_result","info","result","indexOf","forEach","getDatesInWeek","key","MonthCell","renderGrid","numWeeks","_monthInfo2","daysInFirstWeek","Math","ceil","weeksInMonth","_","range","MonthGrid","formatTime","hour","minute","moment","format","EventModal","close","remove","_ref2$event","location","startTime","endTime","Modal","show","Header","Title","Body","Footer","removeEvent","eventId","components_MonthTitle","components_MonthGrid","components_EventModal","id","addEvent","AppComponent","this","injectEvents","_this","props","components_NavBar","react_router","exact","path","render","match","Month","params","React","Component","Boolean","window","hostname","initialState","eventsReducer","eventArr","arguments","length","undefined","action","objectSpread","reduce","eventObj","update","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63c6d988.chunk.js","sourcesContent":["function monthNumToName(i)\n{\n  if(i == 1) return \"January\";\n  if(i == 2) return \"February\";\n  if(i == 3) return \"March\";\n  if(i == 4) return \"April\";\n  if(i == 5) return \"May\";\n  if(i == 6) return \"June\";\n  if(i == 7) return \"July\";\n  if(i == 8) return \"August\";\n  if(i == 9) return \"September\";\n  if(i == 10) return \"October\";\n  if(i == 11) return \"November\";\n  if(i == 12) return \"December\";\n}\n\nfunction monthNameToNum(month)\n{\n  if(month == \"January\") return 1;\n  if(month == \"February\") return 2;\n  if(month == \"March\") return 3;\n  if(month == \"April\") return 4;\n  if(month == \"May\") return 5;\n  if(month == \"June\") return 6;\n  if(month == \"July\") return 7;\n  if(month == \"August\") return 8;\n  if(month == \"September\") return 9;\n  if(month == \"October\") return 10;\n  if(month == \"November\") return 11;\n  if(month == \"December\") return 12;\n}\n\nfunction getCurMonth()\n{\n  var d = new Date();\n  return d.getMonth()+1;\n}\n\nfunction getCurYear()\n{\n  var d = new Date();\n  return d.getFullYear();\n}\n\nfunction getPrevMonth(m)\n{\n  var c = false;\n  if(isNaN(m)) \n  {\n    c = true;\n    m = monthNameToNum(m);\n  }\n  if(m == 1)\n  {\n      m = 12;\n  }\n  else\n  {\n      m = m - 1;\n  }\n  \n  if(c)\n    m = monthNumToName(m);\n  \n  return m;\n}\n\nfunction getNextMonth(m)\n{\n  var c = false;\n  if(isNaN(m)) \n  {\n    c = true;\n    m = monthNameToNum(m);\n  }\n  if(m == 12)\n  {\n      m = 1;\n  }\n  else\n  {\n      m = m + 1;\n  }\n  \n  if(c)\n    m = monthNumToName(m);\n  \n  return m;\n}\n\nfunction getPrevMonthYear(m, y)\n{\n  if(isNaN(m)) \n    m = monthNameToNum(m);\n\n  if(m < getPrevMonth(m))\n  {\n    y = parseInt(y) - 1;    \n  }\n  return y;\n}\n\nfunction getNextMonthYear(m, y)\n{\n  if(isNaN(m)) \n    m = monthNameToNum(m);\n  if(m > getNextMonth(m))\n  {\n    y = parseInt(y) + 1;    \n  }\n  return y;\n}\n\nexport {monthNumToName, monthNameToNum, getCurMonth, getCurYear, getNextMonth, getNextMonthYear, getPrevMonth, getPrevMonthYear};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {monthNumToName, monthNameToNum, getCurMonth, getCurYear, getNextMonth, getNextMonthYear, getPrevMonth, getPrevMonthYear} from '../lib/monthFunctions';\n\nconst NavBar = () => (\n  <nav>\n    <Link to=\"/\">Home</Link>\n    <Link to={\"/month/\" + monthNumToName(getCurMonth()) + \"/\" + getCurYear()}>Monthly View</Link>\n    <Link to=\"/week\">Weekly View</Link>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {monthNumToName, monthNameToNum, getCurMonth, getCurYear, getNextMonth, getNextMonthYear, getPrevMonth, getPrevMonthYear} from '../lib/monthFunctions';\n\nconst MonthTitle = ({\n  month,\n  year,\n}) => (\n  <span><Link to={\"/month/\" + getPrevMonth(month) + \"/\" + getPrevMonthYear(month,year)}> prev </Link>\n  <h2> {month} {year} </h2>\n  <Link to={\"/month/\" + getNextMonth(month) + \"/\" + getNextMonthYear(month,year)}> next </Link></span>\n);\n\nMonthTitle.propTypes = {\n  month: PropTypes.string,\n  year: PropTypes.string,\n};\n\nexport default MonthTitle;\n","import {\n  ADD_EVENT,\n  REMOVE_EVENT,\n  UPDATE_EVENT,\n  SET_DISPLAYED_EVENT,\n} from './eventsConstants';\n\nexport const addEvent = event => ({\n  type: ADD_EVENT,\n  event,\n});\n\nexport const removeEvent = eventId => ({\n  type: REMOVE_EVENT,\n  eventId,\n});\n\nexport const updateEvent = (eventId, update) => ({\n  type: UPDATE_EVENT,\n  eventId,\n  update,\n});\n\nexport const setDisplayedEvent = (displayedEvent) => ({\n  type: SET_DISPLAYED_EVENT,\n  displayedEvent,\n});\n","export const ADD_EVENT = 'ADD_EVENT';\nexport const REMOVE_EVENT = 'REMOVE_EVENT';\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\nexport const SET_DISPLAYED_EVENT = 'SET_DISPLAYED_EVENT';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setDisplayedEvent } from '../reducers/events/eventsActions';\n\nconst mapStateToProps = state => ({\n  events: state.events.events,\n});\n\nconst mapDispatchToProps = { setDisplayedEvent };\n\nconst getEventsOnDate = (events, day, month, year) => Object.values(events)\n  .filter(({ date: { day: d, month: m, year: y }}) =>\n    day === d && month === m && year === y);\n\n\nconst Event = ({\n  title,\n  onClick,\n}) => (\n  <div className=\"event\" onClick={onClick}>\n    { title } \n  </div>\n);\n\nconst MonthCellComponent = ({\n  date,\n  month,\n  year,\n  empty,\n  events,\n  setDisplayedEvent,\n}) => {\n  const eventsOnDate = getEventsOnDate(events, date, month, year);\n  console.log(eventsOnDate);\n  return empty ?\n    <div /> :\n    (\n      <div className=\"month-cell\">\n        {date}\n        { eventsOnDate.map(event => (\n          <Event title={event.title} onClick={() => setDisplayedEvent(event)} />\n        ))}\n      </div>\n    )\n};\n\nMonthCellComponent.propTypes = {\n  date: PropTypes.number,\n  month: PropTypes.string,\n  year: PropTypes.string,\n  empty: PropTypes.bool,\n};\n\nexport { MonthCellComponent };\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthCellComponent);\n","export const Monday = 'Monday';\nexport const Tuesday = 'Tuesday';\nexport const Wednesday = 'Wednesday';\nexport const Thursday = 'Thursday';\nexport const Friday = 'Friday';\nexport const Saturday = 'Saturday';\nexport const Sunday = 'Sunday';\n\nexport const daysByIndex = [\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n];\n","import {\n  January,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December,\n} from '../constants/months';\n\nimport {\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n  Sunday,\n  daysByIndex,\n} from '../constants/daysOfWeek';\n\nconst NUM_DAYS = {\n  [January]: 31,\n  [March]: 31,\n  [April]: 30,\n  [May]: 31,\n  [June]: 30,\n  [July]: 31,\n  [August]: 31,\n  [September]: 30,\n  [October]: 31,\n  [November]: 30,\n  [December]: 31,\n};\n\nconst isLeapYear = year => year % 4 === 0 && (\n  year % 100 !== 0 || year % 400 === 0\n);\n\nconst getNumDays = (month, year) => {\n  if (month === February) {\n    if (isLeapYear(year)) {\n      return 29;\n    }\n    return 28;\n  }\n  return NUM_DAYS[month];\n};\n\nconst monthInfo = (month, year) => {\n  const numDays = getNumDays(month, year);\n  const firstDay = new Date(`${month} 1, ${year}`);\n  const lastDay = new Date(`${month} ${numDays}, ${year}`);\n  const startsOn = daysByIndex[firstDay.getDay()];\n  const endsOn = daysByIndex[lastDay.getDay()];\n  return {\n    month,\n    year,\n    numDays,\n    startsOn,\n    endsOn,\n  };\n};\n\nexport default monthInfo;\n","export const January = 'January';\nexport const February = 'February';\nexport const March = 'March';\nexport const April = 'April';\nexport const May = 'May';\nexport const June = 'June';\nexport const July = 'July';\nexport const August = 'August';\nexport const September = 'September';\nexport const October = 'October';\nexport const November = 'November';\nexport const December = 'December';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport MonthCell from './MonthCell';\nimport monthInfo from '../lib/monthInfo';\nimport {\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n  Sunday,\n  daysByIndex,\n} from '../constants/daysOfWeek';\n\nconst getDatesInWeek = (month, year, week) => {\n  const info = monthInfo(month, year);\n  const result = {\n    [Sunday]: -1,\n    [Monday]: -1,\n    [Tuesday]: -1,\n    [Wednesday]: -1,\n    [Thursday]: -1,\n    [Friday]: -1,\n    [Saturday]: -1,\n  };\n\n  const dateOfFirstSunday = 1 - daysByIndex.indexOf(info.startsOn);\n  let date = dateOfFirstSunday + 7 * week;\n  daysByIndex.forEach(day => {\n    result[day] = date;\n    date += 1;\n  });\n\n  return result;\n};\n\nconst renderWeek = (month, year, week) => {\n  const datesInWeek = getDatesInWeek(month, year, week);\n  const { numDays } = monthInfo(month, year);\n  return (\n    <tr key={`${month}-${week}`}>\n      {daysByIndex.map(day => (\n        <td key={`${day}-${week}`}>\n          <MonthCell\n            date={datesInWeek[day]}\n            month={month}\n            year={year}\n            empty={datesInWeek[day] < 1 || datesInWeek[day] > numDays}\n          />\n        </td>\n      ))\n      }\n    </tr>\n  );\n};\n\nconst weeksInMonth = (month, year) => {\n  const { numDays, startsOn } = monthInfo(month, year);\n  console.log(startsOn);\n  const daysInFirstWeek = 7 - daysByIndex.indexOf(startsOn);\n  return Math.ceil((numDays - daysInFirstWeek) / 7) + 1;\n};\n\nconst renderGrid = (month, year) => {\n  const numWeeks = weeksInMonth(month, year);\n  return _.range(0, numWeeks).map(week => renderWeek(month, year, week));\n};\n\nconst MonthGrid = ({\n  month,\n  year,\n}) => (\n  <div className=\"month-grid-container\">\n    <table className=\"month-grid\">\n      <thead>\n        <th>Sunday</th>\n        <th>Monday</th>\n        <th>Tuesday</th>\n        <th>Wednesday</th>\n        <th>Thursday</th>\n        <th>Friday</th>\n        <th>Saturday</th>\n      </thead>\n      <tbody>\n        {renderGrid(month, year)}\n      </tbody>\n    </table>\n  </div>\n);\n\nMonthGrid.propTypes = {\n  month: PropTypes.string,\n  year: PropTypes.string,\n};\n\nexport default MonthGrid;\n","import React from 'react';\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\n\nconst formatTime = ({ hour, minute }) => moment(`${hour}${minute}`, 'HHmm').format('h:mm a');\n\nconst EventModal = ({ close, remove, event: { title, date, location, startTime, endTime }}) => (\n  <Modal show>\n    <Modal.Header>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <div>{date.month} {date.day}, {date.year}</div>\n      <div>location: {location}</div>\n      <div>start: {formatTime(startTime)}</div>\n      <div>end: {formatTime(endTime)}</div>\n    </Modal.Body>\n    <Modal.Footer>\n      <button onClick={close}>Close</button>\n      <button onClick={remove}>Remove</button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport default EventModal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MonthTitle from './MonthTitle';\nimport MonthGrid from './MonthGrid';\nimport EventModal from './EventModal';\nimport { setDisplayedEvent, removeEvent } from '../reducers/events/eventsActions';\n\nconst mapStateToProps = state => ({\n  displayedEvent: state.events.displayedEvent,\n});\n\nconst mapDispatchToProps = { setDisplayedEvent, removeEvent };\n\nconst MonthComponent = ({\n  month,\n  year,\n  displayedEvent,\n  setDisplayedEvent,\n  removeEvent,\n}) => (\n  <div className=\"month-container\">\n    <MonthTitle month={month} year={year} />\n    <MonthGrid month={month} year={year} />\n    { displayedEvent &&\n      <EventModal\n        event={displayedEvent}\n        close={() => setDisplayedEvent(null)}\n        remove={() => {\n          setDisplayedEvent(null);\n          removeEvent(displayedEvent.id);\n        }}\n      />\n    }\n  </div>\n);\n\nMonthComponent.propTypes = {\n  month: PropTypes.string,\n  year: PropTypes.string,\n  displayedEvent: PropTypes.object,\n};\n\nexport { MonthComponent };\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport Month from './components/Month';\nimport { June } from './constants/months';\nimport { addEvent } from './reducers/events/eventsActions';\n\nimport './App.css';\n\nconst mapDispatchToProps = { addEvent };\n\nconst events = [\n  {\n    id: 1,\n    title: 'Do cs361 assignment',\n    location: 'Chicago',\n    date: {\n      year: '2019',\n      month: June,\n      day: 2,\n    },\n    startTime: {\n      hour: 18,\n      minute: 0,\n    },\n    endTime: {\n      hour: 20,\n      minute: 0,\n    },\n  },\n  {\n    id: 2,\n    title: 'Group meeting',\n    location: 'google hangouts',\n    date: {\n      year: '2019',\n      month: June,\n      day: 2,\n    },\n    startTime: {\n      hour: 20,\n      minute: 0,\n    },\n    endTime: {\n      hour: 20,\n      minute: 30,\n    },\n  },\n  {\n    id: 3,\n    title: 'Exam',\n    location: 'ProctorU',\n    date: {\n      year: '2019',\n      month: June,\n      day: 9,\n    },\n    startTime: {\n      hour: 12,\n      minute: 30,\n    },\n    endTime: {\n      hour: 13,\n      minute: 30,\n    },\n  },\n];\n\nclass AppComponent extends React.Component {\n  componentDidMount() {\n    this.injectEvents(events);\n  }\n\n  injectEvents(events) {\n    events.forEach(event => {\n      this.props.addEvent(event);\n    });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" render={() => <div>Home</div>} />\n          <Route\n            path=\"/month/:month/:year\"\n            render={({match}) => (\n              <Month {...match.params} />\n            )}\n          />\n          <Route path=\"/week\" render={() => <div>Weekly view</div>} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport { AppComponent };\nexport default connect(null, mapDispatchToProps)(AppComponent);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_EVENT,\n  REMOVE_EVENT,\n  UPDATE_EVENT,\n  SET_DISPLAYED_EVENT,\n} from './eventsConstants';\n\nconst initialState = {\n  events: {},\n  displayedEvent: null,\n};\n\nconst coalesceEvents = (eventArr) => eventArr.reduce((eventObj, event) => ({\n  ...eventObj,\n  [event.id]: event,\n}), {});\n\nconst eventsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EVENT:\n      return {\n        ...state,\n        events: {\n          ...state.events,\n          [action.event.id]: action.event,\n        },\n      };\n    case REMOVE_EVENT:\n      return {\n        ...state,\n        events: coalesceEvents(Object.values(state.events).filter(event => event.id !== action.eventId)),\n      };\n    case UPDATE_EVENT:\n      return {\n        ...state,\n        events: {\n          ...state.events,\n          [action.eventId]: {\n            ...state.events[action.eventId],\n            ...action.update,\n          },\n        },\n      };\n    case SET_DISPLAYED_EVENT:\n      return {\n        ...state,\n        displayedEvent: action.displayedEvent,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default eventsReducer;\n","import { combineReducers } from 'redux';\n\nimport eventsReducer from './events/eventsReducer';\n\nconst rootReducer = combineReducers({\n  events: eventsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './reducers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}